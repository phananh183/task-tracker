{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddForm.js","App.js","index.js"],"names":["Button","text","color","onClick","className","style","backgroundColor","Header","title","onShowAddTask","showAddTask","defaultProps","Task","task","onDelete","onDoubleClick","reminder","id","cursor","time","Tasks","tasks","map","AddForm","onAdd","useState","setTask","setTime","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setShowAddTask","setTasks","baseURL","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTaskByID","deleteTask","method","filter","toggleReminder","taskToChange","updatedTask","headers","body","JSON","stringify","addTask","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c8ee7da.chunk.js","sourcesContent":["const Button = ({ text, color, onClick }) => {\n\n    return (\n        <button \n            className='btn'\n            style={{backgroundColor: color}}\n            onClick={onClick}\n        >\n            {text}\n        </button>\n    )\n}\n\nexport default Button\n","import Button from \"./Button\"\n\nconst Header = ({ title, onShowAddTask, showAddTask }) => {\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button \n                text={showAddTask ? 'Close' : 'Add'} \n                color='steelblue' \n                onClick={onShowAddTask}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\nexport default Header\n","import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onDoubleClick}) => {\n    return (\n        <div \n            className={`task ${task.reminder ? 'reminder' : ''}`} \n            onDoubleClick={(id) => onDoubleClick(task.id)}>\n            <h3>\n                {task.text} \n                <FaTimes \n                    style={{color: \"red\", cursor: 'pointer'}} \n                    onClick={() => onDelete(task.id)}\n                />\n            </h3>\n            <p>{task.time}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from \"./Task\"\n\nconst Tasks = ({ tasks, onDelete, onDoubleClick }) => {\n    return (\n       <>\n        {\n            tasks.map((task) => (\n                <Task \n                    key={task.id} \n                    task={task} \n                    onDelete={onDelete}\n                    onDoubleClick={onDoubleClick}\n                />\n            ))\n        }\n       </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddForm = ({ onAdd }) => {\n\n    const [text, setTask] = useState('')\n    const [time, setTime] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!text) {\n            alert(\"Please key in a task\")\n            return\n        }\n\n        onAdd({text, time, reminder})\n\n        setTask('')\n        setTime('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input \n                    type='text' \n                    placeholder='Add task' \n                    value={text}\n                    onChange={(e) => setTask(e.target.value)}\n                />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input \n                    type='text' \n                    placeholder='Add day and time'\n                    value={time}\n                    onChange={(e) => setTime(e.target.value)}    \n                />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input \n                    type='checkbox'\n                    checked={reminder}\n                    onChange={(e) => setReminder(e.currentTarget.checked)}    \n                />\n            </div>\n\n            <input \n                type='submit' \n                value='Add Task' \n                className='btn btn-block' \n            />\n        </form>\n    )\n}\n\nexport default AddForm\n","import { useState, useEffect } from 'react';\nimport Header from './Components/Header';\nimport Tasks from './Components/Tasks';\nimport AddForm from './Components/AddForm';\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  const baseURL = '/api/tasks'\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  const fetchTasks = async () => {\n    const res = await fetch(baseURL)\n    const data = await res.json()\n    return data\n  }\n\n  const fetchTaskByID = async (id) => {\n    const res = await fetch(`${baseURL}/${id}`)\n    const data = await res.json()\n    return data\n  }\n  \n  const deleteTask = async (id) => {\n    await fetch(`${baseURL}/${id}`, {\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  const toggleReminder = async (id) => {\n    const taskToChange = await fetchTaskByID(id)\n    const updatedTask = {...taskToChange, reminder: !taskToChange.reminder}\n\n    const res = await fetch(`${baseURL}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) =>  \n      task.id === id ? {...task, reminder: data.reminder} : task\n    ))\n  }\n\n  const addTask = async (task) => {\n\n    const res = await fetch(baseURL, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n  }\n\n  const toggleShowAddTask = () => {\n    setShowAddTask(!showAddTask)\n  }\n\n  return (\n  <div className='container'>\n    <Header onShowAddTask={toggleShowAddTask} showAddTask={showAddTask}/>\n    {showAddTask && <AddForm onAdd={addTask}/>}\n    {\n    tasks.length === 0 \n    ? 'There is no tasks' \n    : <Tasks tasks={tasks} onDelete={deleteTask} onDoubleClick={toggleReminder}/>\n    }\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}